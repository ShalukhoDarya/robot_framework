name: Robot Framework Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest robotframework

      - name: Download Google Chrome 126
        run: |
          wget https://storage.googleapis.com/chrome-for-testing-public/126.0.6478.63/linux64/chrome-linux64.zip

      - name: Check contents of the Chrome archive
        run: unzip -l chrome-linux64.zip

      - name: Install Google Chrome 126
        run: |
          unzip chrome-linux64.zip
          sudo mv -f chrome-linux64/google-chrome /usr/local/bin/google-chrome
          sudo chown root:root /usr/local/bin/google-chrome
          sudo chmod 0755 /usr/local/bin/google-chrome

      - name: Setup ChromeDriver 126
        run: |
          wget -N https://storage.googleapis.com/chrome-for-testing-public/126.0.6478.63/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv -f chromedriver /usr/local/bin/chromedriver
          sudo chown root:root /usr/local/bin/chromedriver
          sudo chmod 0755 /usr/local/bin/chromedriver

      - name: Check Google Chrome Version
        run: google-chrome --version

      - name: Check ChromeDriver Version
        run: chromedriver --version

      - uses: actions/checkout@v3
        if: success() || failure()

      - name: Run Robot Tests on Chrome
        run: |
          robot --variable BROWSER:Chrome -d results/chrome tests/

      - name: Set output
        if: success() || failure()
        id: results
        run: echo "artifactPath=tests/reports/" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-report
          path: ${{ steps.results.outputs.artifactPath }}